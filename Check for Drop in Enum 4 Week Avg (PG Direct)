| dbxquery 
connection=ngp_connection
timeout=1800
query="
WITH router_stats AS
(
SELECT    CURRENT_TIMESTAMP::date - INTERVAL '1 WEEK' - INTERVAL '1 DAY' as ts,
          a.routername, 
          COUNT(a.guid) as calls
FROM      master.flowstart a
WHERE     a.analyticstime >= (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '1 WEEK' - INTERVAL '1 DAY') * 1000)::bigint AND
          a.analyticstime  < (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '1 WEEK' - INTERVAL '0 DAY') * 1000)::bigint 
GROUP BY  CURRENT_TIMESTAMP::date - INTERVAL '1 WEEK' - INTERVAL '1 DAY', a.routername
UNION
SELECT    CURRENT_TIMESTAMP::date - INTERVAL '2 WEEK' - INTERVAL '1 DAY' as ts,
          a.routername, 
          COUNT(a.guid) as calls
FROM      master.flowstart a
WHERE     a.analyticstime >= (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '2 WEEK' - INTERVAL '1 DAY') * 1000)::bigint AND
          a.analyticstime  < (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '2 WEEK' - INTERVAL '0 DAY') * 1000)::bigint 
GROUP BY  CURRENT_TIMESTAMP::date - INTERVAL '2 WEEK' - INTERVAL '1 DAY', a.routername
UNION
SELECT    CURRENT_TIMESTAMP::date - INTERVAL '3 WEEK' - INTERVAL '1 DAY' as ts,
          a.routername, 
          COUNT(a.guid) as calls
FROM      master.flowstart a
WHERE     a.analyticstime >= (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '3 WEEK' - INTERVAL '1 DAY') * 1000)::bigint AND
          a.analyticstime  < (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '3 WEEK' - INTERVAL '0 DAY') * 1000)::bigint 
GROUP BY  CURRENT_TIMESTAMP::date - INTERVAL '3 WEEK' - INTERVAL '1 DAY', a.routername
UNION
SELECT    CURRENT_TIMESTAMP::date - INTERVAL '4 WEEK' - INTERVAL '1 DAY' as ts,
          a.routername, 
          COUNT(a.guid) as calls
FROM      master.flowstart a
WHERE     a.analyticstime >= (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '4 WEEK' - INTERVAL '1 DAY') * 1000)::bigint AND
          a.analyticstime  < (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '4 WEEK' - INTERVAL '0 DAY') * 1000)::bigint 
GROUP BY  CURRENT_TIMESTAMP::date - INTERVAL '4 WEEK' - INTERVAL '1 DAY', a.routername
) 
SELECT   routername,
         count(distinct ts) as entries,
         sum(calls) as calls
FROM     router_stats 
GROUP BY routername
" shortnames=t
| eval router_avg=ROUND(calls/entries,0)
| table routername router_avg
| join type=left routername [
| dbxquery 
connection=ngp_connection
timeout=1800
query="
WITH router_stats AS
(
SELECT    CURRENT_TIMESTAMP::date - INTERVAL '0 WEEK' - INTERVAL '1 DAY' as ts,
          a.routername, 
          COUNT(a.guid) as calls
FROM      master.flowstart a
WHERE     a.analyticstime >= (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '1 WEEK' - INTERVAL '1 DAY') * 1000)::bigint AND
          a.analyticstime  < (extract('epoch' from CURRENT_TIMESTAMP::date - INTERVAL '1 WEEK' - INTERVAL '0 DAY') * 1000)::bigint 
GROUP BY  CURRENT_TIMESTAMP::date - INTERVAL '0 WEEK' - INTERVAL '1 DAY', a.routername
) 
SELECT   routername,
         sum(calls) as yesterday_calls
FROM     router_stats 
GROUP BY routername
" shortnames=t
]
| table routername yesterday_calls router_avg
| fillnull value=0 yesterday_calls router_avg
| eval perc_change = CASE(
                            router_avg = 0, 100,  
                           router_avg < 1000, 0,  
                      yesterday_calls = 0, -100,  
                   1=1,ROUND((yesterday_calls-router_avg)/router_avg,3)*100
                          )
| search perc_change < -50
